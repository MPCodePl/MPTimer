# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy dotnet core app to Azure Function App - MPTimerFunctions

concurrency:
  group: deployDotNet
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  SOLUTION_PATH: './MPTimer' # set this to the path to your web app project, defaults to the repository root
  EMAIL_PATH: './Emails/Emails' # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '8.0.x' # set this to the dotnet version to use

jobs:
  build:
    runs-on: windows-latest
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: pwsh
        run: |
          pushd './${{ env.SOLUTION_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dotnetbuild
          path: ${{ env.SOLUTION_PATH }}

  deployEmail:
    runs-on: windows-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: dotnetbuild

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.ANGULAR_WEB_APP_SECRET }}

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'MPTimerFunctions'
          slot-name: 'production'
          package: '${{ env.EMAIL_PATH }}/output'
