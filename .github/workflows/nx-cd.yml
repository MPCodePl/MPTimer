name: Build and deploy Nx to Storage Containers

concurrency:
  group: deployNx
  cancel-in-progress: true

on:
  push:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci --legacy-peer-deps
      - uses: nrwl/nx-set-shas@v4

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World
      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
      - run: npx nx run-many -t build
      # - run: npx nx affected --parallel 1 -t e2e-ci

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: nxbuild
          path: dist/apps

  mptimer-landing-page:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: nxbuild

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.MPTIMER_GITHUB_CREDENTIALS }}

      - name: Clear destination
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob delete-batch --account-name mptimerlanding --auth-mode key -s '$web'

      - name: Upload to blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch --overwrite --account-name mptimerlanding --auth-mode key -d '$web' -s 'mptimer-landing-page/browser'

      - name: Purge
        run: az afd endpoint purge --endpoint-name ${{ secrets.LANDING_APP_CDN_ENDPOINT }} --profile-name ${{ secrets.LANDING_APP_CDN_PROFILE_NAME }} --content-paths "/*" --resource-group ${{ secrets.MAIN_RESOURCE_GROUP }} --no-wait

      # Azure logout
      - name: logout
        run: |
          az logout
        if: always()
